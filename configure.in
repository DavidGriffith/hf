AC_INIT(startkern.pl)
AC_CANONICAL_SYSTEM

AM_INIT_AUTOMAKE(hf, 0.1)
AM_CONFIG_HEADER(config.h)

dnl AC_CHECK_TOOL()

AC_PROG_MAKE_SET
AC_ISC_POSIX
AC_PROG_CC
AM_PROG_CC_STDC
dnl AC_PROG_CXX
dnl AC_PROG_RANLIB
AC_C_CONST
AC_C_INLINE
AC_HEADER_STDC
dnl AC_FUNC_ALLOCA

AC_CHECK_PROG(RANLIB, ranlib, ranlib, :)
AC_CHECK_PROG(DLLTOOL, dlltool, dlltool, dlltool)
AC_CHECK_PROG(AS, as, as, as, as)
AC_CHECK_PROG(AR, ar, ar, ar, ar)

dnl AC_CYGWIN
dnl AC_MINGW32
dnl AC_EXEEXT
dnl AC_OBJEXT

dnl if test x$ac_cv_mingw32 != xyes; then
dnl AC_CHECK_LIB(m,cos)
dnl fi

AC_CHECK_LIB(m,cos)

AC_HEADER_TIME
AC_CHECK_HEADERS(getopt.h sys/ioctl.h syslog.h errno.h sys/io.h)
AC_CHECK_HEADERS(sys/audioio.h stropts.h sys/conf.h sys/soundcard.h)
AC_CHECK_HEADERS(forms.h pthread.h sched.h)

AC_CHECK_FUNCS(vsnprintf,AC_DEFINE(HAVE_VSNPRINTF),OSLIBS="$OSLIBS vsnprintf.o")
AC_CHECK_LIB(socket,socket,SOCKLIBS="$SOCKLIBS -lsocket")
dnl AC_CHECK_LIB(nsl,SOCKLIBS="$SOCKLIBS -lsocket")
if test x${ac_cv_header_pthread_h} = xyes; then
    AC_CHECK_LIB(pthread,pthread_create,THRLIBS="$THRLIBS -lpthread")
    AC_DEFINE(_REENTRANT)
fi
AC_CHECK_LIB(posix4,sched_setscheduler,SCHEDLIBS="$SCHEDLIBS -lposix4")

dnl AC_MSG_CHECKING(for GetSystemTime)
dnl getsystemtime=no
dnl AC_TRY_COMPILE([#include <windows.h>], 
dnl      [ SYSTEMTIME tm; GetSystemTime(&tm); ],
dnl      AC_DEFINE(HAVE_GETSYSTEMTIME) getsystemtime=yes)
dnl AC_MSG_RESULT($getsystemtime)

dnl AC_CHECK_TYPE(int8_t,char)
dnl AC_CHECK_TYPE(u_int8_t,unsigned char)
dnl AC_CHECK_TYPE(int16_t,short)
dnl AC_CHECK_TYPE(u_int16_t,unsigned short)
dnl AC_CHECK_TYPE(int32_t,long)
dnl AC_CHECK_TYPE(u_int32_t,unsigned long)

AC_MSG_CHECKING(for bittypes)
bittypes=no
AC_TRY_COMPILE([#include <sys/types.h>], 
     [ int8_t a; u_int8_t b; int16_t c; u_int16_t d; int32_t e; u_int32_t f; ],
     AC_DEFINE(HAVE_BITTYPES) bittypes=yes)
AC_MSG_RESULT($bittypes)

dnl AC_MSG_CHECKING(for M_PI)
dnl mpi=no
dnl AC_TRY_COMPILE([#include <math.h>], 
dnl      [ double f = M_PI; ],
dnl      mpi=yes,AC_DEFINE(M_PI,3.14159265358979323846))
dnl AC_MSG_RESULT($mpi)

dnl Use -Wall if we have gcc.
changequote(,)dnl
if test "x$GCC" = "xyes"; then
  case " $CFLAGS " in
  *[\ \	]-Wall[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wall" ;;
  esac
fi
changequote([,])dnl

AC_ARG_ENABLE(call,
[  --enable-call=CALL      Default to callsign CALL],
[mycall="${enableval}"],[mycall="NOCALL"])

pct_crc0="FFFF"
pct_crc1="FFFF"
pct_crc2="FFFF"
pct_crc3="FFFF"

AC_ARG_ENABLE(pactorcrc,
[  --enable-pactorcrc      Pactor CRC Init],
[pct_crc0="AC6D" pct_crc1="E0BE" pct_crc2="4FC0" pct_crc3="D3E7"],[])

AC_ARG_ENABLE(pctcrc0,
[  --enable-pctcrc0=CRC    Pactor CRC init 0],
[pct_crc0="${enableval}"],[])

AC_ARG_ENABLE(pctcrc1,
[  --enable-pctcrc1=CRC    Pactor CRC init 1],
[pct_crc1="${enableval}"],[])

AC_ARG_ENABLE(pctcrc2,
[  --enable-pctcrc2=CRC    Pactor CRC init 2],
[pct_crc2="${enableval}"],[])

AC_ARG_ENABLE(pctcrc3,
[  --enable-pctcrc3=CRC    Pactor CRC init 3],
[pct_crc3="${enableval}"],[])

AC_ARG_ENABLE(markfreq,
[  --enable-markfreq=HZ    Default mark frequency],
[freq_mark="${enableval}"],[freq_mark=1800])

AC_ARG_ENABLE(spacefreq,
[  --enable-spacefreq=HZ   Default space frequency],
[freq_space="${enableval}"],[freq_space=1600])

AC_ARG_ENABLE(ossfdx,
[  --disable-ossfdx        Disable full duplex operation of the OSS interface],
[AC_DEFINE(OSS_DISABLE_FDX)],[])

AC_ARG_ENABLE(realtime,
[  --disable-realtime      Disable realtime features],
[AC_DEFINE(DISABLE_REALTIME)],[])

AC_DEFINE_UNQUOTED(MYCALL,"${mycall}")
AC_DEFINE_UNQUOTED(PCT_CRC_0,"${pct_crc0}")
AC_DEFINE_UNQUOTED(PCT_CRC_1,"${pct_crc1}")
AC_DEFINE_UNQUOTED(PCT_CRC_2,"${pct_crc2}")
AC_DEFINE_UNQUOTED(PCT_CRC_3,"${pct_crc3}")
AC_DEFINE_UNQUOTED(FREQ_MARK,${freq_mark})
AC_DEFINE_UNQUOTED(FREQ_SPACE,${freq_space})

AM_CONDITIONAL(HAVEOSS, test x${ac_cv_header_sys_soundcard_h} = xyes)
AM_CONDITIONAL(HAVEFORMS, test x${ac_cv_header_sys_forms} = xyes)

L1SUBDIRS="user"
if test x${ac_cv_header_sys_soundcard_h} = xyes; then
    L1SUBDIRS="$L1SUBDIRS kernel"
fi

AC_SUBST(OSLIBS)
AC_SUBST(SOCKLIBS)
AC_SUBST(THRLIBS)
AC_SUBST(SCHEDLIBS)
AC_SUBST(OSS_DISABLE_FDX)
AC_SUBST(DISABLE_REALTIME)
AC_SUBST(MYCALL)
AC_SUBST(PCT_CRC_0)
AC_SUBST(PCT_CRC_1)
AC_SUBST(PCT_CRC_2)
AC_SUBST(PCT_CRC_3)
AC_SUBST(FREQ_MARK)
AC_SUBST(FREQ_SPACE)
AC_SUBST(_REENTRANT)
AC_SUBST(L1SUBDIRS)

echo "Parameters"
echo "Mycall ............................ ${mycall}"
echo "Default mark/space frequencies .... ${freq_mark} ${freq_space}"
echo "Default alt. pactor CRC init ...... ${pct_crc0} ${pct_crc1} ${pct_crc2} ${pct_crc3}"

AC_CONFIG_SUBDIRS(hfterm)

AC_OUTPUT([Makefile
l1/Makefile
l1/kernel/Makefile
l1/user/Makefile
os/Makefile
proto/Makefile
hftermfl/Makefile
dcf77/Makefile
doc/Makefile
test/Makefile
util/Makefile])
